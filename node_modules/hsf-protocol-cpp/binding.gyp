{
  'targets': [
    {
      'target_name': 'hsfProtocol',
      'sources': ['hsf_protocol.cc',
                  'transform.cc',
                  './protocol/hessian/hessian_ext.cc',
                  './protocol/hessian/hessian_input.cc',
                  './protocol/hessian/hessian_output.cc',
                  './protocol/hsf/cs_encode.cc',
                  './protocol/hsf/hessian_protoc.cc',
                  './protocol/hsf/hsf_protoc.cc',
                  './protocol/hsf/tb_remoting.cc',
                  './protocol/objects/debug_text.cc',
                  './protocol/objects/objects.cc',
                  './protocol/utils/utils.cc',
                  ],
      'cflags': ['-fexceptions', '-Wall', '-D_FILE_OFFSET_BITS=64','-D_LARGEFILE_SOURCE', '-O2'], 
      'cflags_cc': ['-fexceptions', '-Wall', '-D_FILE_OFFSET_BITS=64','-D_LARGEFILE_SOURCE', '-O2'], 
      'cflags!': ['-fno-exceptions'],
      'cflags!_cc': ['-fno-exceptions'],
      'conditions': [
        ['OS=="mac"', {
          'xcode_settings': {
            'GCC_ENABLE_CPP_EXCEPTIONS': 'YES'
          }
        }]
        ],
      'include_dirs': [
                       './protocol/utils',
                       './protocol/objects',
                       './protocol/hessian',
                       './protocol/hsf',
                       './',
                       '<!(node -p -e "require(\'path\').relative(\'.\', require(\'path\').dirname(require.resolve(\'nan\')))")'
                       ]
    }
  ]
}
