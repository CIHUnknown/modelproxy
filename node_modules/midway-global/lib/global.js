//增强require
require.extensions['.conf']=function(module,file){
    var fs=require('fs'),
        vm = require('vm');

    var config=fs.readFileSync(file.toString());

    sandbox = {};

    vm.createScript('config = '+ config).runInNewContext(sandbox);
    module.exports=sandbox.config;
}

// 全局logger引用

var logger = require( 'ali-logger' );
var parser = require( 'midway-parser' );

// 全局配置引用
var globalConf;

// 环境变量 取值只可能是  'dev' | 'prod'
var NODE_ENV = process.env.NODE_ENV || 'dev';

// 配置文件夹名
var CONF = '/config';

// 配置文件扩展名
var CONF_EXT = '.conf';

// 配置文件夹路径

var CONF_PATH=process.cwd()+CONF;

// 环境依赖配置文件路径
var envConfPath = CONF_PATH + '/' + NODE_ENV + CONF_EXT;

// 读取环境依赖配置文件路径


try {
    globalConf = require( envConfPath );
} catch ( e ) {
    console.error( 'Config error! path = ' + envConfPath);
    throw e;
}

globalConf.NODE_ENV = NODE_ENV;

var loggerConf = globalConf.log;

if ( loggerConf ){

    loggerConf.level = loggerConf.level 
                       ? logger[ loggerConf.level.toUpperCase() ] || logger.INFO 
                       : logger.INFO;

    loggerConf.stdoutLevel = loggerConf.stdoutLevel 
                             ? logger[ loggerConf.stdoutLevel.toUpperCase() ] || logger.ERROR 
                             : logger.ERROR;

    logger.init( loggerConf );
}

module.exports = {
    getLogger: function( name ) {
        return logger;
    },
    getConfig: function() {
        return globalConf;
    },
    isDaily:function() {
        return globalConf.NODE_ENV==='dev';
    },
    getNodeEnv: function() {
        return globalConf.NODE_ENV;
    },
    render: function( obj ) {
        return parser.parse( obj, globalConf );
    }
};

