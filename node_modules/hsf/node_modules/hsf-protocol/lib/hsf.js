/**!
 * hsf-protocol - lib/hsf.js
 * Copyright(c) 2014 Alibaba Group Holding Limited.
 *
 * Authors:
 *   busi.hyy <busi.hyy@taobao.com>
 */

var remoting = require('./remoting');

/**
 * encode hsf request
 * @param {Number} packetId
 * @param {Object} req
 *   - {String} serverSignature
 *   - {String} methodName
 *   - {Array} args
 *
 * @return {Buffer}
 */
exports.requestEncode = function (packetId, req) {
  var hsfReq = {
    type: 'req',
    packetId: packetId,
    data: req
  };
  return remoting.encode(hsfReq);
};

/**
 * decode request buffer to object
 * @param {Buffer} buf
 * @return {Object}
 */
exports.requestDecode = function (buf) {
  var res = remoting.decode('req', buf);
  if (res.type === 'HEARTBEAT') {
    return {
      packetId: res.packetId,
      packetType: 'HEARTBEAT'
    };
  }

  return {
    packetId: res.packetId,
    packetType: res.type,
    methodName: res.app.methodName,
    serverSignature: res.app.serverSignature,
    args: res.app.args
  };
};

/**
 * encode hsf response
 * @param {Number} packetId
 * @param {Object} res
 *   - {String} errorMsg
 *   - {Object} appResponse
 * @return {Buffer}
 */
exports.responseEncode = function (packetId, res) {
  res = {
    isError: !!res.errorMsg,
    errorMsg: res.errorMsg,
    appResponse: res.appResponse
  };
  var hsfRes = {
    type: 'res',
    packetId: packetId,
    data: res
  };
  return remoting.encode(hsfRes);
};

/**
 * decode response buffer to object
 * @param {Buffer} buf
 * @return {Object}
 */
exports.responseDecode = function (buf) {
  var res = remoting.decode('res', buf);
  if (res.type === 'heartbeat') {
    return {
      packetId: res.packetId,
      type: 'heartbeat'
    };
  }

  return {
    packetId: res.packetId,
    packetType: res.type,
    isError: res.app.isError,
    errorMsg: res.app.errorMsg,
    appResponse: res.app.appResponse
  };
};

/**
 * encode request heartbeat
 * @param {Number} packetId
 * @return {Buffer}
 */
exports.heartbeatEncode = function (packetId) {
  var hsfHeartbeat = {
    type: 'heartbeat',
    packetId: packetId
  };
  return remoting.encode(hsfHeartbeat);
};
