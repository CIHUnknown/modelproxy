/*!
 * hsf - provider/middleware.js
 * Copyright(c) 2012 Taobao.com
 * Author: busi.hyy <busi.hyy@taobao.com>
 */

var Middleware = function () {
  this.middlewares = [];
  this.formatMiddlewares = {};
  this.funcs;
};

Middleware.prototype.use = function (selector, fn) {
  if (typeof selector === 'function') {
    fn = selector;
    selector = '*';
  }
  this.middlewares.push({
    selector: selector,
    fn: fn
  });
};

Middleware.prototype.start = function (funcs) {
  var funcNames = Object.keys(funcs);
  var self = this;
  self.formatMiddlewares = {};
  function _push(name, fn) {
    if (!self.formatMiddlewares[name]) {
      self.formatMiddlewares[name] = [fn];
      return ;
    }
    self.formatMiddlewares[name].push(fn);
  }
  for (var i = 0; i < this.middlewares.length; i++) {
    var selector = this.middlewares[i].selector;
    var fn = this.middlewares[i].fn;
    var type;
    if (typeof selector === 'string') {
      type = 'string';
    } else if (Array.isArray(selector)) {
      type = 'array';
    } else if (selector instanceof RegExp) {
      type = 'regexp';
    } else {
      continue;
    }
    for (var j = 0; j < funcNames.length; j++) {
      var name = funcNames[j];
      if (selector === '*') {
        _push(name, fn);
        continue;
      }
      if (name === selector) {
        _push(name, fn);
        break;
      }
      if (type === 'regexp' && name.match(selector)) {
        _push(name, fn);
        continue;
      }
      if (type === 'array' && selector.indexOf(name) >= 0) {
        _push(name, fn);
        continue;
      }
    }
  }
};

Middleware.prototype.run = function (name, args, fn) {
  var middlewares = this.formatMiddlewares[name];
  if (!middlewares || !middlewares.length) {
    return fn.apply(null, args);
  }
  var res = args[0];
  var index = 0;
  res.next = function () {
    if (res.sended) {
      return;
    }
    index++;
    if (middlewares[index]) {
      return middlewares[index].apply(null, args);  
    }
    fn.apply(null, args);
  };
  middlewares[0].apply(null, args);
};

exports.createMiddleware = function () {
  return new Middleware();
};